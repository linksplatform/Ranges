{
  "README.html": {
    "href": "README.html",
    "title": "Ranges | LinksPlatform's Platform.Ranges Library",
    "keywords": "Ranges LinksPlatform's Platform.Ranges Class Library This library contains Range struct with Minumum and Maximum fields . It is possible to create only a valid Range , overwise exception is thrown. Namespace: Platform.Ranges Forked from: Konard/LinksPlatform/Platform/Platform.Helpers NuGet package: Platform.Ranges Documentation Class Range<T> . PDF file with code for e-readers. Depend on Platform.Exceptions Mystery files .travis.yml - Travis CI build configuration. docfx.json and toc.yml - DocFX build configuration. fmt.sh - script for formating tex file for generating PDF from it. fmt.py - script for formating single .cs file as a part of tex file. Makefile - PDF build configuration. generate-pdf.sh - script that generates PDF with code for e-readers. publish-docs.sh - script that publishes generated documentation and PDF with code for e-readers to gh-pages branch. push-nuget.bat - Windows script for publishing current version of NuGet package. Similar packages alansav/range Range class with Floor and Ceiling fields . mnelsonwhite/Range.NET Range class with Minumum and Maximum properties . sdcb/Sdcb.System.Range Range struct with Start and End properties ."
  },
  "api/Platform.Ranges.html": {
    "href": "api/Platform.Ranges.html",
    "title": "Namespace Platform.Ranges | LinksPlatform's Platform.Ranges Library",
    "keywords": "Namespace Platform.Ranges Classes EnsureExtensions Structs Range<T> Represents a range between minumum and maximum values. Представляет диапазон между минимальным и максимальным значениями."
  },
  "api/Platform.Ranges.Range-1.html": {
    "href": "api/Platform.Ranges.Range-1.html",
    "title": "Struct Range<T> | LinksPlatform's Platform.Ranges Library",
    "keywords": "Struct Range<T> Represents a range between minumum and maximum values. Представляет диапазон между минимальным и максимальным значениями. Implements IEquatable < Range <T>> Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Ranges Assembly : Platform.Ranges.dll Syntax public struct Range<T> : IEquatable<Range<T>> Type Parameters Name Description T Remarks Based on http://stackoverflow.com/questions/5343006/is-there-a-c-sharp-type-for-representing-an-integer-range Constructors | Improve this Doc View Source Range(T) Initializes a new instance of the Range class. Инициализирует новый экземпляр класса Range. Declaration public Range(T minimumAndMaximum) Parameters Type Name Description T minimumAndMaximum Single value for both Minimum and Maximum fields. Одно значение для полей Minimum и Maximum. | Improve this Doc View Source Range(T, T) Initializes a new instance of the Range class. Инициализирует новый экземпляр класса Range. Declaration public Range(T minimum, T maximum) Parameters Type Name Description T minimum The minimum value of the range. Минимальное значение диапазона. T maximum The maximum value of the range. Максимальное значение диапазона. Exceptions Type Condition ArgumentException Thrown when maximum is less than minimum. Fields | Improve this Doc View Source Maximum Returns maximum value of the range. Возвращает максимальное значение диапазона. Declaration public readonly T Maximum Field Value Type Description T | Improve this Doc View Source Minimum Returns minimum value of the range. Возвращает минимальное значение диапазона. Declaration public readonly T Minimum Field Value Type Description T Methods | Improve this Doc View Source ContainsRange(Range<T>) Determines if another range is inside the bounds of this range. Определяет, находится ли другой диапазон внутри границ этого диапазона. Declaration public bool ContainsRange(Range<T> range) Parameters Type Name Description Range <T> range The child range to test. Дочерний диапазон для проверки. Returns Type Description Boolean True if range is inside, else false. True, если диапазон находится внутри, иначе false. | Improve this Doc View Source ContainsValue(T) Determines if the provided value is inside the range. Определяет, находится ли указанное значение внутри диапазона. Declaration public bool ContainsValue(T value) Parameters Type Name Description T value The value to test. Значение для проверки. Returns Type Description Boolean True if the value is inside Range, else false. True, если значение находится внутри диапазона, иначе false. | Improve this Doc View Source Equals(Range<T>) Indicates whether the current range is equal to another range. Определяет, равен ли текущий диапазон другому диапазону. Declaration public bool Equals(Range<T> other) Parameters Type Name Description Range <T> other A range to compare with this range. Диапазон для сравнения с этим диапазоном. Returns Type Description Boolean True if the current range is equal to the other range; otherwise, false. True, если текущий диапазон равен другому диапазону; иначе false. | Improve this Doc View Source IsInsideRange(Range<T>) Determines if this Range is inside the bounds of another range. Определяет, находится ли этот диапазон в пределах другого диапазона. Declaration public bool IsInsideRange(Range<T> range) Parameters Type Name Description Range <T> range The parent range to test on. Родительский диапазон для проверки. Returns Type Description Boolean True if range is inclusive, else false. True, если диапазон включен, иначе false. | Improve this Doc View Source ToString() Presents the Range in readable format. Представляет диапазон в удобном для чтения формате. Declaration public override string ToString() Returns Type Description String String representation of the Range. Строковое представление диапазона. Overrides ValueType.ToString() Implements System.IEquatable<T>"
  },
  "api/Platform.Ranges.EnsureExtensions.html": {
    "href": "api/Platform.Ranges.EnsureExtensions.html",
    "title": "Class EnsureExtensions | LinksPlatform's Platform.Ranges Library",
    "keywords": "Class EnsureExtensions Inheritance Object EnsureExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Ranges Assembly : Platform.Ranges.dll Syntax public static class EnsureExtensions Methods | Improve this Doc View Source ArgumentInRange<T>(EnsureAlwaysExtensionRoot, T, T, T) Declaration public static void ArgumentInRange<T>(this EnsureAlwaysExtensionRoot root, T argumentValue, T minimum, T maximum) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T argumentValue T minimum T maximum Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureAlwaysExtensionRoot, T, T, T, String) Declaration public static void ArgumentInRange<T>(this EnsureAlwaysExtensionRoot root, T argumentValue, T minimum, T maximum, string argumentName) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T argumentValue T minimum T maximum String argumentName Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureAlwaysExtensionRoot, T, Range<T>) Declaration public static void ArgumentInRange<T>(this EnsureAlwaysExtensionRoot root, T argumentValue, Range<T> range) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T argumentValue Range <T> range Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureAlwaysExtensionRoot, T, Range<T>, String) Declaration public static void ArgumentInRange<T>(this EnsureAlwaysExtensionRoot root, T argumentValue, Range<T> range, string argumentName) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T argumentValue Range <T> range String argumentName Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureAlwaysExtensionRoot, T, Range<T>, String, Func<String>) Declaration public static void ArgumentInRange<T>(this EnsureAlwaysExtensionRoot root, T argumentValue, Range<T> range, string argumentName, Func<string> messageBuilder) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T argumentValue Range <T> range String argumentName Func < String > messageBuilder Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureAlwaysExtensionRoot, T, Range<T>, String, String) Declaration public static void ArgumentInRange<T>(this EnsureAlwaysExtensionRoot root, T argumentValue, Range<T> range, string argumentName, string message) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T argumentValue Range <T> range String argumentName String message Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureOnDebugExtensionRoot, T, T, T) Declaration [Conditional(\"DEBUG\")] public static void ArgumentInRange<T>(this EnsureOnDebugExtensionRoot root, T argumentValue, T minimum, T maximum) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T argumentValue T minimum T maximum Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureOnDebugExtensionRoot, T, T, T, String) Declaration [Conditional(\"DEBUG\")] public static void ArgumentInRange<T>(this EnsureOnDebugExtensionRoot root, T argumentValue, T minimum, T maximum, string argumentName) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T argumentValue T minimum T maximum String argumentName Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureOnDebugExtensionRoot, T, Range<T>) Declaration [Conditional(\"DEBUG\")] public static void ArgumentInRange<T>(this EnsureOnDebugExtensionRoot root, T argument, Range<T> range) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T argument Range <T> range Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureOnDebugExtensionRoot, T, Range<T>, String) Declaration [Conditional(\"DEBUG\")] public static void ArgumentInRange<T>(this EnsureOnDebugExtensionRoot root, T argument, Range<T> range, string argumentName) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T argument Range <T> range String argumentName Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureOnDebugExtensionRoot, T, Range<T>, String, Func<String>) Declaration [Conditional(\"DEBUG\")] public static void ArgumentInRange<T>(this EnsureOnDebugExtensionRoot root, T argument, Range<T> range, string argumentName, Func<string> messageBuilder) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T argument Range <T> range String argumentName Func < String > messageBuilder Type Parameters Name Description T | Improve this Doc View Source ArgumentInRange<T>(EnsureOnDebugExtensionRoot, T, Range<T>, String, String) Declaration [Conditional(\"DEBUG\")] public static void ArgumentInRange<T>(this EnsureOnDebugExtensionRoot root, T argument, Range<T> range, string argumentName, string message) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T argument Range <T> range String argumentName String message Type Parameters Name Description T | Improve this Doc View Source MaximumArgumentIsGreaterOrEqualToMinimum<T>(EnsureAlwaysExtensionRoot, T, T) Declaration public static void MaximumArgumentIsGreaterOrEqualToMinimum<T>(this EnsureAlwaysExtensionRoot root, T minimum, T maximum) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T minimum T maximum Type Parameters Name Description T | Improve this Doc View Source MaximumArgumentIsGreaterOrEqualToMinimum<T>(EnsureAlwaysExtensionRoot, T, T, String) Declaration public static void MaximumArgumentIsGreaterOrEqualToMinimum<T>(this EnsureAlwaysExtensionRoot root, T minimum, T maximum, string argumentName) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T minimum T maximum String argumentName Type Parameters Name Description T | Improve this Doc View Source MaximumArgumentIsGreaterOrEqualToMinimum<T>(EnsureAlwaysExtensionRoot, T, T, String, Func<String>) Declaration public static void MaximumArgumentIsGreaterOrEqualToMinimum<T>(this EnsureAlwaysExtensionRoot root, T minimum, T maximum, string argumentName, Func<string> messageBuilder) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T minimum T maximum String argumentName Func < String > messageBuilder Type Parameters Name Description T | Improve this Doc View Source MaximumArgumentIsGreaterOrEqualToMinimum<T>(EnsureAlwaysExtensionRoot, T, T, String, String) Declaration public static void MaximumArgumentIsGreaterOrEqualToMinimum<T>(this EnsureAlwaysExtensionRoot root, T minimum, T maximum, string argumentName, string message) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root T minimum T maximum String argumentName String message Type Parameters Name Description T | Improve this Doc View Source MaximumArgumentIsGreaterOrEqualToMinimum<T>(EnsureOnDebugExtensionRoot, T, T) Declaration [Conditional(\"DEBUG\")] public static void MaximumArgumentIsGreaterOrEqualToMinimum<T>(this EnsureOnDebugExtensionRoot root, T minimum, T maximum) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T minimum T maximum Type Parameters Name Description T | Improve this Doc View Source MaximumArgumentIsGreaterOrEqualToMinimum<T>(EnsureOnDebugExtensionRoot, T, T, String) Declaration [Conditional(\"DEBUG\")] public static void MaximumArgumentIsGreaterOrEqualToMinimum<T>(this EnsureOnDebugExtensionRoot root, T minimum, T maximum, string argumentName) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T minimum T maximum String argumentName Type Parameters Name Description T | Improve this Doc View Source MaximumArgumentIsGreaterOrEqualToMinimum<T>(EnsureOnDebugExtensionRoot, T, T, String, Func<String>) Declaration [Conditional(\"DEBUG\")] public static void MaximumArgumentIsGreaterOrEqualToMinimum<T>(this EnsureOnDebugExtensionRoot root, T minimum, T maximum, string argumentName, Func<string> messageBuilder) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T minimum T maximum String argumentName Func < String > messageBuilder Type Parameters Name Description T | Improve this Doc View Source MaximumArgumentIsGreaterOrEqualToMinimum<T>(EnsureOnDebugExtensionRoot, T, T, String, String) Declaration [Conditional(\"DEBUG\")] public static void MaximumArgumentIsGreaterOrEqualToMinimum<T>(this EnsureOnDebugExtensionRoot root, T minimum, T maximum, string argumentName, string message) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root T minimum T maximum String argumentName String message Type Parameters Name Description T"
  }
}